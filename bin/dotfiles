#!/usr/bin/env bash
#
# Manages the dotfiles.
#
# USAGE:
#
#   $ dotfiles {install|update|upgrade}
#

set -e

if [[ -z "$1" || "$1" == "-h" || "$1" == "--help" ]]; then cat <<HELP
Dotfiles - Lars Graubner - http://larsgraubner.de

Usage: $(basename "$0") {install|update|upgrade}

See the README for documentation.
https://github.com/lgraubner/dotfiles

Copyright (c) 2015 Lars Graubner
Licensed under the MIT license.
HELP
exit; fi

export DOTFILES=~/.dotfiles

source $DOTFILES/scripts/utils.sh

install() {
    if [[ -z "$1" ]]; then
        # find installers and run them iteratively
        find $DOTFILES -name install.sh | while read installer ; do sh -c "${installer}" ; done
    else
        # find specific installer and run it
        installer=$DOTFILES/$1/install.sh

        if [[ -f "$installer" ]]; then
            sh -c "${installer}"
        else
            e_error
            exit 1
        fi
        exit
    fi
}

update() {
    # extend sudo timeout
    e_header "Administrator privileges will be required..."
    sudo -v

    if [[ -z "$1" ]]; then
        # find updaters and run them iteratively
        find $DOTFILES -name update.sh | while read updater ; do sh -c "${updater}" ; done
    else
        # find specific updater and run it
        updater=$DOTFILES/$1/update.sh

        if [[ -f "$updater" ]]; then
            sh -c "${updater}"
        else
            e_error
            exit 1
        fi
    fi

    e_success "Your system is now up to date!"

    exit
}

upgrade() {

    e_header "Fetching latest version..."
    exec_task "cd $DOTFILES && git reset --hard HEAD && git pull"

    e_success

    # reload shell
    exec /bin/zsh -l
}

case $1 in
    install)
        install ${@:2}
        ;;
    update)
        update ${@:2}
        ;;
    upgrade)
        upgrade
        ;;
    *)
        exit 1
esac
