#!/usr/bin/env bash
#
# bootstrap installs things.

source $ZSH/scripts/utils.sh

echo ''

# set ZSH as default shell
if [ -z "$ZSH_VERSION" ]; then
    _running "Setting default shell to ZSH"
    echo ''

    chsh -s $(grep /zsh$ /etc/shells | tail -1)
    echo ''

    _success "Default shell set to ZSH"
fi

# install dotfiles

# setup git
if ! [ -f git/gitconfig.symlink ]; then
    _running 'Setting up gitconfig'
    echo ''

    git_credential='cache'
    if [ "$(uname -s)" == "Darwin" ]; then
      git_credential='osxkeychain'
    fi

    read -p 'Author Name: ' git_authorname
    read -p 'Author E-Mail: ' git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" $ZSH/git/gitconfig.symlink.example > $ZSH/git/gitconfig.symlink

    echo ''
    _success 'gitconfig created'
fi

# log in to npm
read -p 'Log in to NPM? [y/n] ' npm_login
echo ''
if [ "$npm_login" == "y" ]; then
    _running "Logging in to NPM"
    echo ''

    npm login
    status=$?

    echo ''
    if [ "$status" -eq 0 ]; then
        _success "Logged in to NPM successfully"
    else
        _error "Login failed"
    fi
fi

# install dotfiles
_running 'Installing dotfiles'

find -H "$DOTFILES_ROOT" -maxdepth 2 -iname "*.symlink" | while read src; do
    dst="$HOME/.$(basename "${src%.*}")"
    if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]; then
        mv "$dst" "$dst".backup
    fi
    ln -s "$src" "$dst"
    _success "Linked $src to $dst"
done

_success 'dotfiles installed'

echo ''
echo 'Finished!'
