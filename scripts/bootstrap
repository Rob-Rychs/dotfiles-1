#!/usr/bin/env bash

export DOTFILES=~/.dotfiles

backup_dir="$DOTFILES/backups/$(date "+%Y_%m_%d-%H_%M_%S")/"

source $DOTFILES/scripts/utils.sh

_enable_zsh() {
    e_header "Set default shell to ZSH"
    chsh -s $(grep /zsh$ /etc/shells | tail -1)
    e_success
}

_setup_git() {
    e_header "Set up gitconfig"

    git_credential='cache'
    if [[ "$(uname -s)" == "Darwin" ]]; then
      git_credential='osxkeychain'
    fi

    read -p 'Author Name: ' git_authorname
    read -p 'Author E-Mail: ' git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" $DOTFILES/git/gitconfig.symlink.example > $DOTFILES/git/gitconfig.symlink

    e_success
}

_link_files() {
    e_header 'Link dotfiles'

    find -H "$DOTFILES" -maxdepth 2 -iname "*.symlink" | while read src; do
        dst="$HOME/.$(basename "${src%.*}")"
        if [[ -e "$dst" ]]; then
            e_line "Backing up ${dst/#$HOME\//}"

            [[ -e "$backup_dir" ]] || mkdir -p "$backup_dir"
            mv "$dst" "$backup_dir"
        fi
        ln -s "$src" "$dst"
        e_line "Linked ${src/#$HOME/~} to ${dst/#$HOME/~}"
    done

    if [[ -e $backup_dir ]]; then
        e_line "\nBackups were moved to ${backup_dir/#$HOME/~}"
    fi

    e_success
}

init() {
    # set ZSH as default shell
    if [[ -z "$ZSH_VERSION" ]]; then
        _enable_zsh
    fi

    # setup git
    if [[ ! -e "$DOTFILES/git/gitconfig.symlink" ]]; then
        _setup_git
    fi

    # link dotfiles
    _link_files

    # reload shell
    exec /bin/zsh -l
}

cat <<HELP
Dotfiles - Lars Graubner - http://larsgraubner.de

Usage: dotfiles {install|update|upgrade}

See the README for documentation.
https://github.com/lgraubner/dotfiles

Copyright (c) 2015 Lars Graubner
Licensed under the MIT license.
HELP

init

exit 0
